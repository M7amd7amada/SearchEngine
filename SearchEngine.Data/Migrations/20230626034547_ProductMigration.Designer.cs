// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SearchEngine.Data;

#nullable disable

namespace SearchEngine.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230626034547_ProductMigration")]
    partial class ProductMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SearchEngine.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Mock Product 1",
                            Price = 9.99m
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Mock Product 2",
                            Price = 19.99m
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Mock Product 3",
                            Price = 14.99m
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Mock Product 4",
                            Price = 24.99m
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "Mock Product 5",
                            Price = 29.99m
                        },
                        new
                        {
                            ProductId = 6,
                            Name = "Mock Product 6",
                            Price = 12.99m
                        },
                        new
                        {
                            ProductId = 7,
                            Name = "Mock Product 7",
                            Price = 7.99m
                        },
                        new
                        {
                            ProductId = 8,
                            Name = "Mock Product 8",
                            Price = 17.99m
                        },
                        new
                        {
                            ProductId = 9,
                            Name = "Mock Product 9",
                            Price = 22.99m
                        },
                        new
                        {
                            ProductId = 10,
                            Name = "Mock Product 10",
                            Price = 11.99m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
